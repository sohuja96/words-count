{"version":3,"sources":["FileUploadButton.js","Footer.js","Instructions.js","App.js","serviceWorker.js","index.js"],"names":["FileUploadButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","keywords","loadedFiles","fileNames","downloaded","fr","_this2","handleRead","e","textArr","content","target","result","push","setState","occurrences","string","subString","allowOverlapping","length","n","pos","step","indexOf","parseDocumentsForKeywords","docs","names","kwFoundArray","docFoundArray","o","i","console","log","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","Symbol","iterator","next","done","k","value","err","return","handleDownloadCSV","encodedUri","filename","document","getElementById","link","createElement","setAttribute","body","appendChild","click","parentNode","removeChild","downloadFile","rows","kw","unshift","csvContent","map","join","encodeURI","generateCSV","shift","handleKeyword","keyword","enterKeyword","injectKeyword","keywordList","ulEntry","createTextNode","onclick","removingList","text","innerHTML","filter","index","react_default","a","className","type","id","name","onChange","f","newNames","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","FileReader","onloadend","readAsText","reverse","_i","handleFile","files","multiple","placeholder","onKeyDown","keyPress","key","onClick","loading","src","Component","Footer","href","Instructions","window","File","FileList","Blob","alert","App","src_Instructions","src_FileUploadButton","src_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d163a26.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass FileUploadButton extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {keywords: [], loadedFiles: [], fileNames: [], downloaded: false};\n\t}\n\n\trender() {\n\t\tlet fr;\n\n\t\tconst handleRead = (e) => {\n\t\t\tlet textArr = this.state.loadedFiles;\n\t\t\tconst content = e.target.result;\n\t\t\ttextArr.push(content);\n\n\t\t\tthis.setState({\n\t\t\t\tkeywords: this.state.keywords,\n\t\t\t\tloadedFiles: textArr,\n\t\t\t\tfileNames: this.state.fileNames\n\t\t\t});\n\t\t}\n\n\t\tconst handleFile = (f) => {\n\t\t\tlet names = this.state.fileNames;\n\t\t\tlet newNames = []\n\n\t\t\tfor (let i of f) {\n\t\t\t\tfr = new FileReader();\n\t\t\t\tfr.onloadend = handleRead;\n\t\t\t\tfr.readAsText(i);\n\t\t\t\tnewNames.push(i.name);\n\t\t\t}\n\t\t\tnewNames.reverse();\n\t\t\tfor (let i of newNames) {\n\t\t\t\tnames.push(i);\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tkeywords: this.state.keywords,\n\t\t\t\tloadedFiles: this.state.loadedFiles,\n\t\t\t\tfileNames: names\n\t\t\t});\n\t\t}\n\n\t\tconst generateCSV = () => {\n\t\t\tconst rows = parseDocumentsForKeywords();\n\t\t\tlet kw = this.state.keywords;\n\t\t\tkw.unshift(\"File name\");\n\t\t\trows.unshift(kw);\n\t\t\tthis.setState({\n\t\t\t\tkeywords: this.state.keywords,\n\t\t\t\tloadedFiles: this.state.loadedFiles,\n\t\t\t\tfileNames: this.state.fileNames,\n\t\t\t\tdownloaded: true\n\t\t\t});\n\t\t\tlet csvContent = \"data:text/csv;charset=utf-8,\" + rows.map((e) => { return e.join(\",\"); }).join(\"\\n\");\n\t\t\treturn encodeURI(csvContent);\n\t\t}\n\n\t\tconst occurrences= (string, subString, allowOverlapping) => {\n\t\t\tstring += \"\";\n\t\t\tsubString += \"\";\n\t\t\tif (subString.length <= 0) return string.length + 1;\n\t\t\tlet n = 0,\n\t\t\tpos = 0;\n\t\t\tlet step = (allowOverlapping) ? (1) : (subString.length);\n\n\t\t\twhile (true) {\n\t\t\t\tpos = string.indexOf(subString, pos);\n\t\t\t\tif (pos >= 0) {\n\t\t\t\t\tn++;\n\t\t\t\t\tpos += step;\n\t\t\t\t} else break;\n\t\t\t}\n\t\t\treturn (n);\n\t\t}\n\n\t\tconst parseDocumentsForKeywords = () => {\n\t\t\tlet docs = this.state.loadedFiles;\n\t\t\tlet keywords = this.state.keywords;\n\t\t\tlet names = this.state.fileNames;\n\t\t\tlet kwFoundArray = [];\n\t\t\tlet docFoundArray = [];\n\t\t\tlet o = 0;\n\t\t\tfor (let i = 0; i < docs.length; i++) {\n\t\t\t\tkwFoundArray = [];\n\t\t\t\tkwFoundArray.push(names[i]);\n\t\t\t\tconsole.log(keywords);\n\t\t\t\tfor (let k of keywords) {\n\t\t\t\t\to = occurrences(docs[i], k, true);\n\t\t\t\t\tkwFoundArray.push(o);\n\t\t\t\t}\n\t\t\t\tdocFoundArray.push(kwFoundArray);\n\t\t\t}\n\t\t\treturn docFoundArray;\n\t\t}\n\n\n\n\t\tconst downloadFile = (encodedUri) => {\n\n\t\t\tlet filename = document.getElementById(\"downloadname\").value;\n\t\t\tfilename = filename?filename:\"words-count\";\n\n\t\t\tlet link = document.createElement('a');\n\t        link.setAttribute('href', encodedUri);\n\t        link.setAttribute('download', filename);\n\t        document.body.appendChild(link);\n\t        link.click();\n\t        link.parentNode.removeChild(link);\n\t        return encodedUri;\n\t\t}\n\n\n\t\tconst handleDownloadCSV = () => {\n\t\t\tdownloadFile(generateCSV());\n\t\t\tlet kw = this.state.keywords;\n\t\t\tkw.shift();\n\t\t}\n\n\t\tconst enterKeyword = (keyword) => {\n\t\t\tlet keywords = this.state.keywords;\n\t\t\tkeywords.push(keyword);\n\t\t\tthis.setState({\n\t\t\t\tkeywords: keywords,\n\t\t\t\tloadedFiles: this.state.loadedFiles,\n\t\t\t\tfileNames: this.state.fileNames\n\t\t\t})\n\t\t}\n\n\t\tconst keyPress = (e) => {\n\t\t\tif (e === 'Enter') {\n\t\t\t\thandleKeyword();\n\t\t\t}\n\t\t}\n\t\tconst handleKeyword = () => {\n\t\t\tlet keyword = document.getElementById('keyword').value;\n\t\t\tenterKeyword(keyword);\n\t\t\tinjectKeyword(keyword);\n\t\t\tdocument.getElementById('keyword').value = '';\n\t\t}\n\n\t\tconst injectKeyword = (keyword) => {\n\t\t\tlet keywordList = document.getElementById('keywords');\n\t\t\tlet ulEntry = document.createElement('li');\n\t\t\tulEntry.appendChild(document.createTextNode(keyword));\n\t\t\tulEntry.onclick = () => {\n\t\t\t\tlet removingList = this.state.keywords;\n\t\t\t\tlet text = ulEntry.innerHTML;\n\t\t\t\tconsole.log(removingList)\n\t\t\t\tremovingList = removingList.filter((value, index, removingList) => {\n\t\t\t\t\treturn value !== text;\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tconsole.log(removingList)\n\t\t\t\tkeywordList.removeChild(ulEntry);\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tkeywords: removingList\n\t\t\t\t})\n\t\t\t}\n\t\t\tkeywordList.appendChild(ulEntry);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"FileUpload\">\n\t\t\t\t<p><b>Choose Files</b></p>\n\t\t\t\t<input type=\"file\" id=\"files\" name=\"files\" onChange={e => handleFile(e.target.files)} multiple />\n\t\t\t\t<output id=\"list\"></output>\n\t\t\t\t<br/>\n\t\t\t\t<p><b>Keywords to Search</b></p>\n\t\t\t\t<input type=\"text\" id=\"keyword\" placeholder=\"Keywords\" onKeyDown={e => keyPress(e.key)}/>\n\t\t\t\t<button type=\"button\" id=\"enterKeyword\" onClick={() => handleKeyword()}>Add Word</button>\n\t\t\t\t<ul id=\"keywords\">\n\n\t\t\t\t</ul>\n\t\t\t\t<br/>\n\t\t\t\t<p><b>Save as</b></p>\n\t\t\t\t<input type=\"text\" id=\"downloadname\" placeholder=\"words-count\"/>\n\t\t\t\t<button type=\"button\" id=\"downloadCSV\" onClick={() => handleDownloadCSV()}>Download</button>\n\t\t\t\t{ this.state.loading && <img src=\"./loading.gif\" /> }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FileUploadButton;","import React, { Component } from 'react';\nimport './App.css';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"Footer\">\n        <h6><a href=\"http://sohuja96.github.io/\">Contact</a></h6>\n        <h6><a href=\"https://github.com/sohuja96/words-count\">Source</a></h6>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass Instructions extends Component {\n  render() {\n    return (\n      <div className=\"Instructions\">\n        <h3>Create a matrix counting the instances of a keyword across text documents.</h3>\n      </div>\n    );\n  }\n}\nexport default Instructions;\n","import React, { Component } from 'react';\nimport './App.css';\nimport FileUploadButton from './FileUploadButton.js';\nimport Footer from './Footer.js';\nimport Instructions from './Instructions.js';\n// Check for the various File API support.\nif (window.File && window.FileReader && window.FileList && window.Blob) {\n  // Great success! All the File APIs are supported.\n} else {\n  alert('The File APIs are not fully supported in this browser.');\n}\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Words Count</h1>\n        </header>\n        <Instructions/>\n        <FileUploadButton/>\n        <Footer/>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}